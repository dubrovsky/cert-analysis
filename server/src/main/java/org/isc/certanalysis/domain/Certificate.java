package org.isc.certanalysis.domain;
// Generated Jan 25, 2019 9:50:29 AM by Hibernate Tools 4.3.5.Final

import com.fasterxml.jackson.annotation.JsonFormat;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import java.time.Instant;
import java.time.LocalDateTime;

/**
 * Certificate generated by hbm2java
 */
@Entity
@Table(name = "CERTIFICATE", schema = "CERT_REP3")
public class Certificate extends AbstractAuditingEntity {

	private Long id;
	private File file;
	private String fio;
	private String position;
	private String address;
	private String serialNumber;
	private String commonName;
	private LocalDateTime notBefore;
	private LocalDateTime notAfter;
	private String subjectKeyIdentifier;
	private String issuerKeyIdentifier;
	private String issuerPrincipal;
	private String subjectPrincipal;
//	private Set<NotificationGroup> notificationGroups = new HashSet<>(0);

	public Certificate() {
		super();
	}

	public Certificate(Long id, File file, String serialNumber, long createdBy, Instant createdDate,
	                   long lastModifiedBy, Instant lastModifiedDate, LocalDateTime notBefore, LocalDateTime notAfter) {
		super(createdBy, createdDate, lastModifiedBy, lastModifiedDate);
		this.id = id;
		this.file = file;
		this.serialNumber = serialNumber;
		this.notBefore = notBefore;
		this.notAfter = notAfter;
	}

	public Certificate(Long id, File file, String fio, String position, String address,
	                   String serialNumber, String commonName, long createdBy, Instant createdDate, long lastModifiedBy,
	                   Instant lastModifiedDate, LocalDateTime notBefore, LocalDateTime notAfter, String subjectKeyIdentifier,
	                   String issuerKeyIdentifier, String issuerPrincipal, String subjectPrincipal) {
		super(createdBy, createdDate, lastModifiedBy, lastModifiedDate);
		this.id = id;
		this.file = file;
		this.fio = fio;
		this.position = position;
		this.address = address;
		this.serialNumber = serialNumber;
		this.commonName = commonName;
		this.notBefore = notBefore;
		this.notAfter = notAfter;
		this.subjectKeyIdentifier = subjectKeyIdentifier;
		this.issuerKeyIdentifier = issuerKeyIdentifier;
		this.issuerPrincipal = issuerPrincipal;
		this.subjectPrincipal = subjectPrincipal;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "CERTIFICATE_SEQ")
	@SequenceGenerator(sequenceName = "SEQ_CERTIFICATE", name = "CERTIFICATE_SEQ")
	@Column(name = "ID", unique = true, nullable = false, precision = 16, scale = 0)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FILES_ID", nullable = false)
	public File getFile() {
		return this.file;
	}

	public void setFile(File file) {
		this.file = file;
	}

	@Column(name = "FIO", length = 64)
	public String getFio() {
		return this.fio;
	}

	public void setFio(String fio) {
		this.fio = fio;
	}

	@Column(name = "POSITION", length = 64)
	public String getPosition() {
		return this.position;
	}

	public void setPosition(String position) {
		this.position = position;
	}

	@Column(name = "ADDRESS", length = 128)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "SERIAL_NUMBER", nullable = false, length = 48)
	public String getSerialNumber() {
		return this.serialNumber;
	}

	public void setSerialNumber(String serialNumber) {
		this.serialNumber = serialNumber;
	}

	@Column(name = "COMMON_NAME", length = 128)
	public String getCommonName() {
		return this.commonName;
	}

	public void setCommonName(String commonName) {
		this.commonName = commonName;
	}

	@JsonFormat(pattern = "dd.MM.yyyy HH:mm:ss", timezone = "GMT+3")
//	@Temporal(TemporalType.DATE)
	@Column(name = "NOT_BEFORE", nullable = false, length = 7)
	public LocalDateTime getNotBefore() {
		return this.notBefore;
	}

	public void setNotBefore(LocalDateTime notBefore) {
		this.notBefore = notBefore;
	}

	@JsonFormat(pattern = "dd.MM.yyyy HH:mm:ss", timezone = "GMT+3")
//	@Temporal(TemporalType.DATE)
	@Column(name = "NOT_AFTER", nullable = false, length = 7)
	public LocalDateTime getNotAfter() {
		return this.notAfter;
	}

	public void setNotAfter(LocalDateTime notAfter) {
		this.notAfter = notAfter;
	}

	@Column(name = "SUBJECT_KEY_IDENTIFIER", length = 48)
	public String getSubjectKeyIdentifier() {
		return this.subjectKeyIdentifier;
	}

	public void setSubjectKeyIdentifier(String subjectKeyIdentifier) {
		this.subjectKeyIdentifier = subjectKeyIdentifier;
	}

	@Column(name = "ISSUER_KEY_IDENTIFIER", length = 48)
	public String getIssuerKeyIdentifier() {
		return this.issuerKeyIdentifier;
	}

	public void setIssuerKeyIdentifier(String issuerKeyIdentifier) {
		this.issuerKeyIdentifier = issuerKeyIdentifier;
	}

	@Column(name = "ISSUER_PRINCIPAL", length = 48)
	public String getIssuerPrincipal() {
		return this.issuerPrincipal;
	}

	public void setIssuerPrincipal(String issuerPrincipal) {
		this.issuerPrincipal = issuerPrincipal;
	}

	@Column(name = "SUBJECT_PRINCIPAL", length = 48)
	public String getSubjectPrincipal() {
		return this.subjectPrincipal;
	}

	public void setSubjectPrincipal(String subjectPrincipal) {
		this.subjectPrincipal = subjectPrincipal;
	}

	@Override
	public int hashCode() {
		return 31;
	}

	@Override
	public boolean equals(Object o) {
		if (this == o) return true;
		if (!(o instanceof Certificate)) return false;
		return getId() != null && getId().equals(((Certificate) o).getId());
	}

}
